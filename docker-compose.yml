services:
  db:
    image: postgres
    network_mode: "host"
    #networks:
     # - host
    #restart: always
    
    volumes:
      - ./data/db:/var/lib/postgresql/data
    #healthcheck:
      #test: ["CMD-SHELL", "pg_isready"]
      #interval: 10s
      #timeout: 5s
      #retries: 5
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    #ports:
      #- "5432:5432"
    
  redis: 
     image: redis:6.2-alpine
     network_mode: "host"
     #networks:
       #- host
     #ports:
       #- '6379:6379' 
  
  celery:
     build: .
     network_mode: "host"
     #networks:
       #- host
     command: celery -b redis://redis:6379/0 -A quicktest worker -l debug 
     environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - REDIS_HOST=redis
     depends_on:
       - db
       - redis
     
  web:
    build: .
    network_mode: "host"
    #networks:
      #- host
    command: python manage.py runserver 0.0.0.0:8000
  
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - REDIS_HOST=redis
    depends_on:
     - db
     - redis
    #depends_on:
      #db:
        #condition: service_started
        #restart: true
      #redis:
        #condition: service_started
    #restart: always
    
#networks:
  #my_network:
    #name: quick-test_default
    #external: true
#networks:
  #my-host-network:
    #driver: host
    #driver_opts:
      #com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
  
  
      
   
