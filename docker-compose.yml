services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    #ports:
      #- "5432:5432"
  redis: 
     image: redis:6.2-alpine
     ports:
       - '6379:6379' 
  celery:
     build: .
     command: celery -b redis://redis:6379/0 -A quicktest worker -l debug 
     environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - REDIS_HOST=redis
     depends_on:
       - db
       - redis
  web:
    build: .
    #command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
      
      
      
   
