name: Docker Compose CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432/tcp
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Start services
        run: sudo docker compose up -d

      - name: Run tests
        run: sudo docker compose run web python manage.py wait_for_db && sudo docker compose run web python manage.py test

      - name: Stop services
        run: sudo docker compose down
    env:
        POSTGRES_HOST: "db"
        POSTGRES_PORT: 5432
        POSTGRES_DB: "postgres"
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "postgres"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"
        CELERY_BROKER_URL: "redis://redis:6379/0"
        REDIS_HOST: "redis"

#name: Docker Compose Action

#on: [push]

#jobs:
  #build:
    #runs-on: ubuntu-latest
    ##services:
      ##db:
        ##image: postgres:latest
        ##env:
          ##POSTGRES_HOST: db
          ##POSTGRES_USER: postgres
          ##POSTGRES_PASSWORD: postgres
          ##POSTGRES_DB: postgres
        ##options: >-
          ##--health-cmd pg_isready
          ##--health-interval 10s
          ##--health-timeout 5s
          ##--health-retries 5
        ##ports:
          ##- 5432:5432
          
          
  #steps:
     #- name: Checkout code
       #uses: actions/checkout@v3

     #- name: Set up Docker Compose
       #uses: docker/setup-compose@v2

     #- name: Start services
       #run: docker compose up -d

     #- name: Run tests
       #run: docker compose run web python manage.py test

     #- name: Stop services
       #run: docker compose down

    #steps:
      #- uses: actions/checkout@v4.2.2

      #- name: Run docker compose
        #uses: hoverkraft-tech/compose-action@v2.0.1
        #with:
          #compose-file: "docker-compose.yml"
        ##env:
          ##POSTGRES_HOST: "db"
          ##POSTGRES_PORT: 5432
          ##POSTGRES_DB: "postgres"
          ##POSTGRES_USER: "postgres"
          ##POSTGRES_PASSWORD: "postgres"
          ##CELERY_RESULT_BACKEND: "redis://redis:6379/0"
          ##CELERY_BROKER_URL: "redis://redis:6379/0"
          ##REDIS_HOST: "redis"

      #- name: Execute tests in the running services
        #run: |
          #sudo docker compose run web python manage.py wait_for_db && sudo docker compose run web python manage.py test
